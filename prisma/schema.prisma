// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  storeId   Int       @default(0)
  name      String    @db.VarChar(255)
  email     String    @unique @db.VarChar(255)
  password  String    @db.VarChar(255)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  deletedAt DateTime?

  @@index([storeId])
  @@map("users")
}

model Store {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(255)
  address    String?  @db.VarChar(255)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
  deletedAt  DateTime?

  // リレーション
  casts             Cast[]
  performances      CastDailyPerformance[]

  @@index([name])
  @@map("stores")
}

model Cast {
  id            Int      @id @default(autoincrement())
  storeId       Int      @default(0)
  name          String   @db.VarChar(255)
  salarySystem  Int      @default(0) // 0: 月給, 1: 時給
  monthlySalary Decimal? @db.Decimal(12,2)
  hourlyWage    Decimal? @db.Decimal(12,2)
  backSetting   Int      @default(0) // 0: バック設定なし, 1: バック設定あり
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now()) @updatedAt
  deletedAt     DateTime?

  // リレーション
  store             Store    @relation(fields: [storeId], references: [id])
  performances      CastDailyPerformance[]

  @@index([storeId], name: "idx_casts_store_id")
  @@index([name], name: "idx_casts_name")
  @@map("casts")
}

model CastDailyPerformance {
  id                Int      @id @default(autoincrement())
  castId            Int
  storeId           Int
  performanceDate   DateTime

  // 勤怠関連
  startTime         String @default("00:00")
  endTime           String @default("00:00")
  overtime          Decimal @db.Decimal(5,2) @default(0)

  // 各種バック・ボーナス関連
  drinkSubtotal       Decimal @db.Decimal(10,2) @default(0)
  drinkSubtotalBack   Decimal @db.Decimal(10,2) @default(0)
  bottleSubtotal      Decimal @db.Decimal(10,2) @default(0)
  bottleSubtotalBack  Decimal @db.Decimal(10,2) @default(0)
  foodSubtotal        Decimal @db.Decimal(10,2) @default(0)
  foodSubtotalBack    Decimal @db.Decimal(10,2) @default(0)
  bonus               Decimal @db.Decimal(10,2) @default(0)

  // 日払い支給額関連
  welfareCost         Decimal @db.Decimal(10,2) @default(0)
  dailyPayment        Decimal @db.Decimal(10,2) @default(0)

  // マイナス関連
  absenceDeduction    Decimal @db.Decimal(10,2) @default(0)
  soriDeduction       Decimal @db.Decimal(10,2) @default(0)
  tardinessDeduction  Decimal @db.Decimal(10,2) @default(0)
  otherDeductions     Decimal @db.Decimal(10,2) @default(0)

  createdAt         DateTime @default(now())
  updatedAt         DateTime @default(now()) @updatedAt
  deletedAt         DateTime?

  // リレーション
  cast              Cast    @relation(fields: [castId], references: [id])
  store             Store   @relation(fields: [storeId], references: [id])

  @@index([storeId, performanceDate], name: "idx_store_performance_date")
  @@index([castId, storeId, performanceDate], name: "idx_cast_store_performance_date")
  @@map("cast_daily_performance")
}

model StoreDailyPerformance {
  id                    Int      @id @default(autoincrement())
  storeId               Int      @default(0)
  performanceDate       DateTime

  // 入金項目 (Incoming Funds)
  cashSales             Decimal  @default(0) @db.Decimal(12,2)
  cardSales             Decimal  @default(0) @db.Decimal(12,2)
  receivablesCollection Decimal  @default(0) @db.Decimal(12,2)
  receivables           Decimal  @default(0) @db.Decimal(12,2)

  // 出金項目 (Outgoing Funds)
  miscExpenses          Decimal  @default(0) @db.Decimal(12,2)
  otherExpenses         Decimal  @default(0) @db.Decimal(12,2)

  // 売上関連 (Sales Related)
  setCount              Int      @default(0)
  customerCount         Int      @default(0)

  // 現金関連 (Cash Related)
  actualCash            Decimal  @default(0) @db.Decimal(12,2)
  coinCarryover         Decimal  @default(0) @db.Decimal(12,2)
  transferredCash       Decimal  @default(0) @db.Decimal(12,2)

  createdAt             DateTime @default(now())
  updatedAt             DateTime @default(now()) @updatedAt
  deletedAt             DateTime?

  @@index([storeId, performanceDate], name: "idx_store_performance_date_for_store")
  @@map("store_daily_performance")
}

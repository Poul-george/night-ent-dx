// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  storeId   Int       @default(0)
  name      String    @db.VarChar(255)
  email     String    @unique @db.VarChar(255)
  password  String    @db.VarChar(255)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  deletedAt DateTime?

  @@index([storeId])
  @@map("users")
}

model Store {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(255)
  address    String?  @db.VarChar(255)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
  deletedAt  DateTime?

  @@index([name])
  @@map("stores")
}

model Cast {
  id            Int      @id @default(autoincrement())
  storeId       Int      @default(0)
  name          String   @db.VarChar(255)
  salarySystem  Decimal? @db.Decimal(12,2)
  monthlySalary Decimal? @db.Decimal(12,2)
  hourlyWage    Decimal? @db.Decimal(12,2)
  backSetting   Int      @default(0) // 0: バック設定なし, 1: バック設定あり
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now()) @updatedAt
  deletedAt     DateTime?

  @@index([storeId], name: "idx_casts_store_id")
  @@index([name], name: "idx_casts_name")
  @@map("casts")
}
